@model FacultyMVC.ViewModels.StudentFilterViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager

<h2>Students</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Students" asp-action="Index" method="get">
    <p>
        <select asp-for="StudentIndex" asp-items="Model.Indexes">
            <option value="">INDEXES</option>
        </select>
        Full Name: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students[0].Index)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students[0].LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students[0].EnrollmentDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students[0].AcquiredCredits)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students[0].CurrentSemestar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students[0].EducationLevel)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Students)
        {
            <tr>
                <td>
                    @{ if (item.ProfilePicture != null)
                        {
                            <img src="~/images/@item.ProfilePicture"
                                 class="rounded-circle"
                                 height="40" width="40"
                                 asp-append-version="true" />}
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Index)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AcquiredCredits)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentSemestar)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EducationLevel)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |

                    @{
                        IQueryable<AppUser> users = UserManager.Users;
                        IQueryable<int> ids = users.Select(u => u.StudentId).Distinct();
                        if (ids.Contains(item.Id))
                        {
                            AppUser student = users.Where(u => u.StudentId == item.Id).First();

                            <a asp-controller="Admin" asp-action="Update" asp-route-id="@student.Id">Profile</a>
                        }
                        else
                        {
                            <a asp-controller="Admin" asp-action="Create" asp-route-studentid="@item.Id">Profile</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
